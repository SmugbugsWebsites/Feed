{
  "_args": [
    [
      {
        "raw": "cordova-plugin-touch-id",
        "scope": null,
        "escapedName": "cordova-plugin-touch-id",
        "name": "cordova-plugin-touch-id",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "D:\\Android\\feedQuest\\feedquest\\node_modules"
    ]
  ],
  "_from": "cordova-plugin-touch-id@latest",
  "_id": "cordova-plugin-touch-id@3.2.0",
  "_inCache": true,
  "_location": "/cordova-plugin-touch-id",
  "_nodeVersion": "4.2.2",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/cordova-plugin-touch-id-3.2.0.tgz_1464535411795_0.9385343580506742"
  },
  "_npmUser": {
    "name": "eddyverbruggen",
    "email": "eddyverbruggen@gmail.com"
  },
  "_npmVersion": "2.14.7",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cordova-plugin-touch-id",
    "scope": null,
    "escapedName": "cordova-plugin-touch-id",
    "name": "cordova-plugin-touch-id",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/cordova-plugin-touch-id/-/cordova-plugin-touch-id-3.2.0.tgz",
  "_shasum": "786064baf23940e0e8931e0e2c48e198e3def964",
  "_shrinkwrap": null,
  "_spec": "cordova-plugin-touch-id",
  "_where": "D:\\Android\\feedQuest\\feedquest\\node_modules",
  "author": {
    "name": "Eddy Verbruggen",
    "email": "eddyverbruggen@gmail.com",
    "url": "https://github.com/EddyVerbruggen"
  },
  "bugs": {
    "url": "https://github.com/EddyVerbruggen/cordova-plugin-touch-id/issues"
  },
  "cordova": {
    "id": "cordova-plugin-touch-id",
    "platforms": [
      "ios"
    ]
  },
  "dependencies": {},
  "description": "Scan the fingerprint of your user with the TouchID sensor (iPhone 5S, iPhone 6(S), ..)",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "786064baf23940e0e8931e0e2c48e198e3def964",
    "tarball": "https://registry.npmjs.org/cordova-plugin-touch-id/-/cordova-plugin-touch-id-3.2.0.tgz"
  },
  "engines": [
    {
      "name": "cordova",
      "version": ">=3.0.0"
    }
  ],
  "gitHead": "d55f3574d7f661324fd4a9130b81e79fa9129ee1",
  "homepage": "https://github.com/EddyVerbruggen/cordova-plugin-touch-id#readme",
  "keywords": [
    "TouchID",
    "Touch ID",
    "Fingerprint",
    "Biometric",
    "Scanner",
    "ecosystem:cordova",
    "cordova-ios"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "eddyverbruggen",
      "email": "eddyverbruggen@gmail.com"
    }
  ],
  "name": "cordova-plugin-touch-id",
  "optionalDependencies": {},
  "readme": "# Cordova TouchID Plugin\nby [Eddy Verbruggen](http://twitter.com/eddyverbruggen)\n\n## 0. Index\n\n1. [Description](#1-description)\n2. [Screenshot](#2-screenshot)\n3. [Installation](#3-installation)\n\t3. [Automatically (CLI / Plugman)](#automatically-cli--plugman)\n\t3. [Manually](#manually)\n4. [Usage](#4-usage)\n5. [Security++](#5-security)\n6. [License](#5-license)\n\n## 1. Description\n\nScan the fingerprint of your user with the TouchID sensor (iPhone 5S).\n\n* Compatible with [Cordova Plugman](https://github.com/apache/cordova-plugman).\n* Minimum iOS version is 8 (error callbacks will be gracefully invoked on lower versions).\n* Requires a fingerprint scanner, so an iPhone 5S or newer is required.\n\n## 2. Screenshot\nDistorted a bit because I created it back when Apple had not yet released the SDK and they're not a fan of developers posting screenshots of unreleased features.\n\n![ScreenShot](screenshots/TouchID-demo.PNG)\n\n## 3. Installation\n\n### Automatically (CLI / Plugman)\nCompatible with [Cordova Plugman](https://github.com/apache/cordova-plugman), compatible with [PhoneGap 3.0 CLI](http://docs.phonegap.com/en/3.0.0/guide_cli_index.md.html#The%20Command-line%20Interface_add_features), here's how it works with the CLI (backup your project first!):\n\nFrom npm:\n```\n$ cordova plugin add cordova-plugin-touch-id\n$ cordova prepare\n```\n\nThe latest, from the master repo:\n```\n$ cordova plugin add https://github.com/EddyVerbruggen/cordova-plugin-touch-id\n$ cordova prepare\n```\n\nTouchID.js is brought in automatically. There is no need to change or add anything in your html.\n\n### Manually\n\n1\\. Add the following xml to your `config.xml` in the root directory of your `www` folder:\n```xml\n<feature name=\"TouchID\">\n  <param name=\"ios-package\" value=\"TouchID\" />\n</feature>\n```\n\nYou'll need to add the `LocalAuthentication.framework` and `Security.framework` to your project.\nClick your project, Build Phases, Link Binary With Libraries, search for and add the frameworks.\n\n2\\. Grab a copy of TouchID.js, add it to your project and reference it in `index.html`:\n```html\n<script type=\"text/javascript\" src=\"js/TouchID.js\"></script>\n```\n\n3\\. Download the source files and copy them to your project.\n\niOS: Copy the two `.h` and two `.m` files to `platforms/ios/<ProjectName>/Plugins`\n\n## 4. Usage\nFirst you'll want to check whether or not the user has a configured fingerprint scanner.\nYou can use this to show a 'log in with your fingerprint' button next to a username/password login form.\n```js\nwindow.plugins.touchid.isAvailable(\n  function(msg) {alert('ok: ' + msg)},    // success handler: TouchID available\n  function(msg) {alert('not ok: ' + msg)} // error handler: no TouchID available\n);\n```\n\nIf the onSuccess handler was called, you can scan the fingerprint.\nThere are two options: `verifyFingerprint` and `verifyFingerprintWithCustomPasswordFallback`.\nThe first method will offer a fallback option called 'enter passcode' which shows the default passcode UI when pressed.\nThe second method will offer a fallback option called 'enter password' (not passcode) which allows you to provide your own password dialog.\n```js\nwindow.plugins.touchid.verifyFingerprint(\n  'Scan your fingerprint please', // this will be shown in the native scanner popup\n   function(msg) {alert('ok: ' + msg)}, // success handler: fingerprint accepted\n   function(msg) {alert('not ok: ' + JSON.stringify(msg))} // error handler with errorcode and localised reason\n);\n```\nThe errorhandler of the method above can receive an error code of `-2` which means the user pressed the 'enter password' fallback.\n\n```js\nwindow.plugins.touchid.verifyFingerprintWithCustomPasswordFallback(\n  'Scan your fingerprint please', // this will be shown in the native scanner popup\n   function(msg) {alert('ok: ' + msg)}, // success handler: fingerprint accepted\n   function(msg) {alert('not ok: ' + JSON.stringify(msg))} // error handler with errorcode and localised reason\n);\n```\n\nThis will render a button labelled 'Enter password' in case the fingerprint is not recognized.\nIf you want to provide your own label ('Enter PIN' perhaps), you can use awkwardly named function (added in version 3.1.0):\n\n```js\nwindow.plugins.touchid.verifyFingerprintWithCustomPasswordFallbackAndEnterPasswordLabel(\n  'Scan your fingerprint please', // this will be shown in the native scanner popup\n  'Enter PIN', // this will become the 'Enter password' button label\n   function(msg) {alert('ok: ' + msg)}, // success handler: fingerprint accepted\n   function(msg) {alert('not ok: ' + JSON.stringify(msg))} // error handler with errorcode and localised reason\n);\n```\n\nYou can copy-paste these lines of code for a quick test:\n```html\n<button onclick=\"window.plugins.touchid.isAvailable(function(msg) {alert('ok: ' + msg)}, function(msg) {alert('not ok: ' + msg)})\">Touch ID available?</button>\n<button onclick=\"window.plugins.touchid.verifyFingerprint('Scan your fingerprint please', function(msg) {alert('ok: ' + msg)}, function(msg) {alert('not ok: ' + JSON.stringify(msg))})\">Scan fingerprint</button>\n```\n\n## 5. Security++\nSince iOS9 it's possible to check whether or not the list of enrolled fingerprints changed since\nthe last time you checked it. It's recommended you add this check so you can counter hacker attacks\nto your app. See [this article](https://godpraksis.no/2016/03/fingerprint-trojan/) for more details.\n\nSo instead of checking the fingerprint after `isAvailable` add another check.\nIn case `didFingerprintDatabaseChange` returns `true` you probably want to re-authenticate your user\nbefore accepting valid fingerprints again.\n\n```js\nwindow.plugins.touchid.isAvailable(\n  function(available) {\n    if (available) {\n      window.plugins.touchid.didFingerprintDatabaseChange(\n        function(changed) {\n          if (changed) {\n            // re-auth the user by asking for his credentials before allowing a fingerprint scan again\n          } else {\n            // call the fingerprint scanner\n          }\n        }\n      );\n    }\n  }\n);\n```\n\n## 6. License\n\n[The MIT License (MIT)](http://www.opensource.org/licenses/mit-license.html)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/EddyVerbruggen/cordova-plugin-touch-id.git"
  },
  "scripts": {},
  "version": "3.2.0"
}
